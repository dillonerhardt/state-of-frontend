{"version":3,"sources":["webpack:////Users/dillonerhardt/projects/sof/components/Footer.js","webpack:////Users/dillonerhardt/projects/sof/deck.mdx"],"names":["style","padding","display","alignItems","height","width","src","borderRadius","marginRight","opacity","margin","makeShortcode","name","props","console","warn","Head","Footer","Steps","Notes","layoutProps","MDXContent","components","mdxType","content","parentName","isMDXComponent"],"mappings":"6LAEe,aACb,OACE,yBAAKA,MAAO,CAAEC,QAAF,SAAqBC,QAArB,OAAsCC,WAAY,WAC5D,yBACEC,OADF,KAEEC,MAFF,KAGEC,IAHF,6EAIEN,MAAO,CACLI,OADK,GAELC,MAFK,GAGLE,aAHK,MAILC,YAAa,MAGjB,0BAAMR,MAAO,CAAES,QAAS,KAAxB,kBACiB,0BAAMT,MAAO,CAAEU,OAAQ,UADxC,wBAEiB,0BAAMV,MAAO,CAAEU,OAAQ,UAFxC,MAbJ,uBCKIC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAErD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAEhBG,EAAOL,EAAc,QACrBM,EAASN,EAAc,UACvBO,EAAQP,EAAc,SACtBQ,EAAQR,EAAc,SACtBS,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YALS,UAKT,iBAAeO,EAAiBP,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAE5E,YAACP,EAAD,CAAMO,QAAQ,QAChB,kDACA,oBAAMX,KAAK,eAAeY,QAAQ,wBAClC,oBAAMZ,KAAK,eAAeY,QAAQ,mBAClC,oBAAMZ,KAAK,gBAAgBY,QAAQ,0BACnC,oBAAMZ,KAAK,sBAAsBY,QAAQ,kFACzC,oBAAMZ,KAAK,gBAAgBY,QAAQ,kCAEjC,YAAC,EAAD,CAAQD,QAAQ,UAClB,YAAC,EAAD,CAAcA,QAAQ,kBAEpB,+CACA,uBACA,wCACA,YAACL,EAAD,CAAOK,QAAQ,SACb,sBACE,kBAAIE,WAAW,MAAf,yBACA,kBAAIA,WAAW,MAAf,0BACA,kBAAIA,WAAW,MAAf,uCAGJ,YAACN,EAAD,CAAOI,QAAQ,SAAf,uBACA,uBACA,uDACA,qIACA,YAACJ,EAAD,CAAOI,QAAQ,SAAf,gHAIA,uBACA,kDACA,0IACA,YAACL,EAAD,CAAOK,QAAQ,SACb,sBACE,kBAAIE,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,oBAGJ,YAACN,EAAD,CAAOI,QAAQ,SAAf,2GAIA,uBACA,kCACA,yFACA,YAACJ,EAAD,CAAOI,QAAQ,UACf,uBACA,0CACA,oGACA,YAACJ,EAAD,CAAOI,QAAQ,SAAf,0IAIA,uBACA,wCACA,iDACA,mHACA,YAACJ,EAAD,CAAOI,QAAQ,UACf,uBACA,oCACA,6EACA,YAACL,EAAD,CAAOK,QAAQ,SACb,sBACE,kBAAIE,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,8BACA,kBAAIA,WAAW,MAAf,WAGJ,YAACN,EAAD,CAAOI,QAAQ,SAAf,iDACA,uBACA,uEACA,8HACA,YAACJ,EAAD,CAAOI,QAAQ,SAAf,4KAKA,uBACA,sDACA,kHACA,YAACL,EAAD,CAAOK,QAAQ,SACb,sBACE,kBAAIE,WAAW,MAAf,mBACA,kBAAIA,WAAW,MAAf,0BACA,kBAAIA,WAAW,MAAf,kBACA,kBAAIA,WAAW,MAAf,aAGJ,YAACN,EAAD,CAAOI,QAAQ,UACf,uBACA,gDACA,4CACA,YAACJ,EAAD,CAAOI,QAAQ,SAAf,6KAKA,uBACA,kCAKJF,EAAWK,gBAAiB","file":"component---deck-mdx-2c61df4bd05017c92a18.js","sourcesContent":["import React from \"react\";\n\nexport default () => {\n  return (\n    <div style={{ padding: \"15px 0\", display: \"flex\", alignItems: \"center\" }}>\n      <img\n        height=\"40\"\n        width=\"40\"\n        src=\"https://dillonerhardt.com/_next/image?url=%2Fdillon-erhardt.jpg&w=320&q=75\"\n        style={{\n          height: 50,\n          width: 50,\n          borderRadius: \"50%\",\n          marginRight: 15,\n        }}\n      />\n      <span style={{ opacity: 0.6 }}>\n        Dillon Erhardt <span style={{ margin: \"0 8px\" }}>//</span>\n        @dillonerhardt <span style={{ margin: \"0 8px\" }}>//</span>\n        dillonerhardt.com\n      </span>\n    </div>\n  );\n};\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport CustomFooter from \"./components/Footer\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Head = makeShortcode(\"Head\");\nconst Footer = makeShortcode(\"Footer\");\nconst Steps = makeShortcode(\"Steps\");\nconst Notes = makeShortcode(\"Notes\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Head mdxType=\"Head\">\n  <title>The State of Frontend</title>\n  <meta name=\"twitter:card\" content=\"summary_large_image\" />\n  <meta name=\"twitter:site\" content=\"@dillonerhardt\" />\n  <meta name=\"twitter:title\" content=\"The State of Frontend\" />\n  <meta name=\"twitter:description\" content=\"A look at modern frontend technologies, UI architecture and state management.\" />\n  <meta name=\"twitter:image\" content=\"https://example.com/card.png\" />\n    </Head>\n    <Footer mdxType=\"Footer\">\n  <CustomFooter mdxType=\"CustomFooter\" />\n    </Footer>\n    <h1>{`The State of Frontend`}</h1>\n    <hr></hr>\n    <h2>{`Dillon Erhardt`}</h2>\n    <Steps mdxType=\"Steps\">\n      <ul>\n        <li parentName=\"ul\">{`Self-taught developer`}</li>\n        <li parentName=\"ul\">{`Tech Lead at Cognizant`}</li>\n        <li parentName=\"ul\">{`Senior UI Architect at IHS Markit`}</li>\n      </ul>\n    </Steps>\n    <Notes mdxType=\"Notes\">Say hello to Reanna</Notes>\n    <hr></hr>\n    <h3>{`What I'm going to talk about?`}</h3>\n    <p>{`How we manage state in modern frontend applications and how that can impact the development of your project.`}</p>\n    <Notes mdxType=\"Notes\">\n  This applied to most types of applications. The current JavaScript ecosystem\n  seems to struggle with it more.\n    </Notes>\n    <hr></hr>\n    <h3>{`Different types of state`}</h3>\n    <p>{`To be able properly manage our state we need to first understand the different types of state in our application.`}</p>\n    <Steps mdxType=\"Steps\">\n      <ul>\n        <li parentName=\"ul\">{`UI state`}</li>\n        <li parentName=\"ul\">{`Navigation state`}</li>\n        <li parentName=\"ul\">{`Business state`}</li>\n      </ul>\n    </Steps>\n    <Notes mdxType=\"Notes\">\n  Generally speaking This isn't exact this is just the general pattern most web\n  applications will follow.\n    </Notes>\n    <hr></hr>\n    <h3>{`UI State`}</h3>\n    <p>{`This usually includes state for forms, data fetching and layout.`}</p>\n    <Notes mdxType=\"Notes\"></Notes>\n    <hr></hr>\n    <h3>{`Navigation state`}</h3>\n    <p>{`This is where we keep track of what part of the application the user is on.`}</p>\n    <Notes mdxType=\"Notes\">\n  This is a good example of how viewing it seperatly to a state management\n  solution forces developers to not use it for the wrong state.\n    </Notes>\n    <hr></hr>\n    <h3>{`Business State`}</h3>\n    <p>{`Basically any state that`}</p>\n    <p>{`This is likeley most of your applications state and the area where we see the most issues.`}</p>\n    <Notes mdxType=\"Notes\"></Notes>\n    <hr></hr>\n    <h3>{`Exceptions`}</h3>\n    <p>{`Like most things in development this isn't absolute.`}</p>\n    <Steps mdxType=\"Steps\">\n      <ul>\n        <li parentName=\"ul\">{`Applications with heavy front end logic`}</li>\n        <li parentName=\"ul\">{`Offline first applications`}</li>\n        <li parentName=\"ul\">{`Games`}</li>\n      </ul>\n    </Steps>\n    <Notes mdxType=\"Notes\">You should still aim to keep these seperated.</Notes>\n    <hr></hr>\n    <h3>{`State management solutions and their problems`}</h3>\n    <p>{`Most projects I see have only one or two solutions for handling state. We'll take Redux as an example`}</p>\n    <Notes mdxType=\"Notes\">\n  1. This is usually seen as good practice as it avoids multiple sources of\n  truth. 2. Picking Redux as it's the most common and has implementations in\n  multiple languages.\n    </Notes>\n    <hr></hr>\n    <h3>{`How this affects development`}</h3>\n    <p>{`The way you manage state in an application has a much wider impact than you would expect.`}</p>\n    <Steps mdxType=\"Steps\">\n      <ul>\n        <li parentName=\"ul\">{`Story splitting`}</li>\n        <li parentName=\"ul\">{`Architecture decisions`}</li>\n        <li parentName=\"ul\">{`Team structure`}</li>\n        <li parentName=\"ul\">{`Testing`}</li>\n      </ul>\n    </Steps>\n    <Notes mdxType=\"Notes\"></Notes>\n    <hr></hr>\n    <h3>{`How you can solve this`}</h3>\n    <p>{`The tooling is key.`}</p>\n    <Notes mdxType=\"Notes\">\n  We like to think that as an application evolves we will improve the core code\n  but usually it is very hard to change, this is especially true for large\n  engineering teams.\n    </Notes>\n    <hr></hr>\n    <h3>{`The End`}</h3>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}